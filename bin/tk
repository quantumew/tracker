#!/usr/bin/env node
"use strict";

var args, container, debug, doc, logger, neodoc, runner;

container = require("../lib/container");
neodoc = container.resolve("neodoc");

doc = `Time tracking command line interface.

Usage:
    tk use <timesheet> [options]
    tk in <tag> [--description=<desc>] [--at=<time>] [options]
    tk out [--at=<time>] [options]
    tk analyze [<tag>] [--all] [options]
    tk edit <id> [--in=<time>] [--out=<time>] [options]

options:
    --verbose, -v            Turn on debug logging.

    --help, -h, -?           Shows this help message.

    <id>                      Id of entry to edit.

    <timesheet>               Timesheet to use.

    <tag>                     Tag for entry in timesheet.

    -a, --at <time>           Time to clock in/out.

    --all                     Analyze all timesheets for the day.

    -d, --description <desc>  Description of timesheet clock in entry. [default: ""]

    --in <time>               Edit clock in time.

    --out <time>              Edit clock out time.

Examples:

    # Create a timesheet.
    tk use code-review

    # Clock into timesheet with tag tracker with a long description.
    tk in tracker --description "Code review for Johny Johnson on tracker."

    # Clock out of a timesheet manually.
    tk out

    # Anaylyze timesheet.
    tk analyze

    # Edit clock out time of entry #2 of a timesheet.
    tk edit 2 --in "10:30"
`;
args = neodoc.run(doc);
debug = args["--verbose"] || process.env.DEBUG;
container.register("debug", debug);
logger = container.resolve("logger");
runner = container.resolve("runner");
runner.run(args).catch((err) => {
    logger.error(err);
    process.exit(1);
});
